CMAKE_MINIMUM_REQUIRED(VERSION 2.8.4)
PROJECT(upsylon)

INCLUDE(../scripts/y.cmake)
SET(CMAKE_INSTALL_PREFIX ${CMAKE_CURRENT_SOURCE_DIR}/../sdk)
MESSAGE( STATUS "SDK in ${CMAKE_INSTALL_PREFIX}")

FILE(GLOB SCRIPTS ../scripts/*.cmake)
#MESSAGE( STATUS "scripts=${SCRIPTS}" )
INSTALL( FILES ${SCRIPTS} DESTINATION share/y )

MESSAGE(STATUS "")
Y_SEPLINE()
MESSAGE( STATUS "Scanning Libraries" )
Y_SEPLINE()
MESSAGE(STATUS "")
ADD_SUBDIRECTORY(main)
ADD_SUBDIRECTORY(math)
ADD_SUBDIRECTORY(lang)
ADD_SUBDIRECTORY(mpi)
ADD_SUBDIRECTORY(chem)
ADD_SUBDIRECTORY(ink)
#ADD_SUBDIRECTORY(json)
#ADD_SUBDIRECTORY(seem)
ADD_SUBDIRECTORY(net)

FIND_PROGRAM(DOXYGEN doxygen)
IF( "${DOXYGEN}" STREQUAL "DOXYGEN-NOTFOUND"  )
	MESSAGE( STATUS "No available Doxygen" )
ELSE()
	MESSAGE( STATUS "Will generate Doxygen" ) 
	ADD_CUSTOM_TARGET(docs
		COMMAND ${DOXYGEN}
		WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/..
		COMMENT "Generating Documentation")
ENDIF()
MESSAGE( STATUS "")
Y_SEPLINE()
MESSAGE( STATUS "Scanning External Libraries" )
Y_SEPLINE()
ADD_SUBDIRECTORY(ext)

MESSAGE(STATUS "")
Y_SEPLINE()
MESSAGE( STATUS "Scanning C++ Wrapping Libraries" )
Y_SEPLINE()
MESSAGE(STATUS "")
ADD_SUBDIRECTORY(z++)
ADD_SUBDIRECTORY(bz2++)
ADD_SUBDIRECTORY(lua++)
ADD_SUBDIRECTORY(sqlite++)
ADD_SUBDIRECTORY(fltk)

#TODO vairable to be populated
ADD_CUSTOM_TARGET(int 
DEPENDS 
test-z++ test-bz2++ test-lua++ test-sqlite++
COMMENT "Built Wrapping Libraries")


