#include "double_hot.hpp"

namespace upsylon { namespace Graphic {

 DoubleHot:: DoubleHot() throw() : Ramp() {}
 DoubleHot::~DoubleHot() throw() {}
 const rgb * DoubleHot:: _256colors() const throw() {
  static const rgb _[256] = {
	rgb(0xff,0x00,0x00), rgb(0xff,0x05,0x00), rgb(0xff,0x0b,0x00), rgb(0xff,0x11,0x00), rgb(0xff,0x17,0x00), rgb(0xff,0x1d,0x00), rgb(0xff,0x23,0x00), rgb(0xff,0x29,0x00),
	rgb(0xff,0x2f,0x00), rgb(0xff,0x35,0x00), rgb(0xff,0x3b,0x00), rgb(0xff,0x42,0x00), rgb(0xff,0x47,0x00), rgb(0xff,0x4e,0x00), rgb(0xff,0x53,0x00), rgb(0xff,0x5a,0x00),
	rgb(0xff,0x5f,0x00), rgb(0xff,0x66,0x00), rgb(0xff,0x6b,0x00), rgb(0xff,0x72,0x00), rgb(0xff,0x77,0x00), rgb(0xff,0x7e,0x00), rgb(0xff,0x84,0x00), rgb(0xff,0x89,0x00),
	rgb(0xff,0x8f,0x00), rgb(0xff,0x96,0x00), rgb(0xff,0x9c,0x00), rgb(0xff,0xa1,0x00), rgb(0xff,0xa7,0x00), rgb(0xff,0xae,0x00), rgb(0xff,0xb4,0x00), rgb(0xff,0xb9,0x00),
	rgb(0xff,0xbf,0x00), rgb(0xff,0xc6,0x00), rgb(0xff,0xcc,0x00), rgb(0xff,0xd1,0x00), rgb(0xff,0xd7,0x00), rgb(0xff,0xde,0x00), rgb(0xff,0xe4,0x00), rgb(0xff,0xe9,0x00),
	rgb(0xff,0xef,0x00), rgb(0xff,0xf6,0x00), rgb(0xff,0xfc,0x00), rgb(0xfc,0xff,0x00), rgb(0xf6,0xff,0x00), rgb(0xef,0xff,0x00), rgb(0xe9,0xff,0x00), rgb(0xe4,0xff,0x00),
	rgb(0xde,0xff,0x00), rgb(0xd7,0xff,0x00), rgb(0xd1,0xff,0x00), rgb(0xcc,0xff,0x00), rgb(0xc6,0xff,0x00), rgb(0xbf,0xff,0x00), rgb(0xb9,0xff,0x00), rgb(0xb4,0xff,0x00),
	rgb(0xae,0xff,0x00), rgb(0xa7,0xff,0x00), rgb(0xa1,0xff,0x00), rgb(0x9c,0xff,0x00), rgb(0x96,0xff,0x00), rgb(0x8f,0xff,0x00), rgb(0x89,0xff,0x00), rgb(0x84,0xff,0x00),
	rgb(0x7e,0xff,0x00), rgb(0x77,0xff,0x00), rgb(0x72,0xff,0x00), rgb(0x6b,0xff,0x00), rgb(0x66,0xff,0x00), rgb(0x5f,0xff,0x00), rgb(0x5a,0xff,0x00), rgb(0x53,0xff,0x00),
	rgb(0x4e,0xff,0x00), rgb(0x47,0xff,0x00), rgb(0x42,0xff,0x00), rgb(0x3b,0xff,0x00), rgb(0x35,0xff,0x00), rgb(0x2f,0xff,0x00), rgb(0x29,0xff,0x00), rgb(0x23,0xff,0x00),
	rgb(0x1d,0xff,0x00), rgb(0x17,0xff,0x00), rgb(0x11,0xff,0x00), rgb(0x0b,0xff,0x00), rgb(0x05,0xff,0x00), rgb(0x00,0xff,0x00), rgb(0x00,0xff,0x05), rgb(0x00,0xff,0x0b),
	rgb(0x00,0xff,0x11), rgb(0x00,0xff,0x17), rgb(0x00,0xff,0x1d), rgb(0x00,0xff,0x23), rgb(0x00,0xff,0x29), rgb(0x00,0xff,0x2f), rgb(0x00,0xff,0x35), rgb(0x00,0xff,0x3b),
	rgb(0x00,0xff,0x42), rgb(0x00,0xff,0x47), rgb(0x00,0xff,0x4e), rgb(0x00,0xff,0x53), rgb(0x00,0xff,0x5a), rgb(0x00,0xff,0x5f), rgb(0x00,0xff,0x66), rgb(0x00,0xff,0x6b),
	rgb(0x00,0xff,0x72), rgb(0x00,0xff,0x77), rgb(0x00,0xff,0x7e), rgb(0x00,0xff,0x84), rgb(0x00,0xff,0x89), rgb(0x00,0xff,0x8f), rgb(0x00,0xff,0x96), rgb(0x00,0xff,0x9c),
	rgb(0x00,0xff,0xa1), rgb(0x00,0xff,0xa7), rgb(0x00,0xff,0xae), rgb(0x00,0xff,0xb4), rgb(0x00,0xff,0xb9), rgb(0x00,0xff,0xbf), rgb(0x00,0xff,0xc6), rgb(0x00,0xff,0xcc),
	rgb(0x00,0xff,0xd1), rgb(0x00,0xff,0xd7), rgb(0x00,0xff,0xde), rgb(0x00,0xff,0xe4), rgb(0x00,0xff,0xe9), rgb(0x00,0xff,0xef), rgb(0x00,0xff,0xf6), rgb(0x00,0xff,0xfc),
	rgb(0x00,0xfc,0xff), rgb(0x00,0xf6,0xff), rgb(0x00,0xef,0xff), rgb(0x00,0xe9,0xff), rgb(0x00,0xe4,0xff), rgb(0x00,0xde,0xff), rgb(0x00,0xd7,0xff), rgb(0x00,0xd1,0xff),
	rgb(0x00,0xcc,0xff), rgb(0x00,0xc6,0xff), rgb(0x00,0xbf,0xff), rgb(0x00,0xb9,0xff), rgb(0x00,0xb4,0xff), rgb(0x00,0xae,0xff), rgb(0x00,0xa7,0xff), rgb(0x00,0xa1,0xff),
	rgb(0x00,0x9c,0xff), rgb(0x00,0x96,0xff), rgb(0x00,0x8f,0xff), rgb(0x00,0x89,0xff), rgb(0x00,0x84,0xff), rgb(0x00,0x7e,0xff), rgb(0x00,0x77,0xff), rgb(0x00,0x72,0xff),
	rgb(0x00,0x6b,0xff), rgb(0x00,0x66,0xff), rgb(0x00,0x5f,0xff), rgb(0x00,0x5a,0xff), rgb(0x00,0x53,0xff), rgb(0x00,0x4e,0xff), rgb(0x00,0x47,0xff), rgb(0x00,0x42,0xff),
	rgb(0x00,0x3b,0xff), rgb(0x00,0x35,0xff), rgb(0x00,0x2f,0xff), rgb(0x00,0x29,0xff), rgb(0x00,0x23,0xff), rgb(0x00,0x1d,0xff), rgb(0x00,0x17,0xff), rgb(0x00,0x11,0xff),
	rgb(0x00,0x0b,0xff), rgb(0x00,0x05,0xff), rgb(0x00,0x00,0xff), rgb(0x05,0x00,0xff), rgb(0x0b,0x00,0xff), rgb(0x11,0x00,0xff), rgb(0x17,0x00,0xff), rgb(0x1d,0x00,0xff),
	rgb(0x23,0x00,0xff), rgb(0x29,0x00,0xff), rgb(0x2f,0x00,0xff), rgb(0x35,0x00,0xff), rgb(0x3b,0x00,0xff), rgb(0x42,0x00,0xff), rgb(0x47,0x00,0xff), rgb(0x4e,0x00,0xff),
	rgb(0x53,0x00,0xff), rgb(0x5a,0x00,0xff), rgb(0x5f,0x00,0xff), rgb(0x66,0x00,0xff), rgb(0x6b,0x00,0xff), rgb(0x72,0x00,0xff), rgb(0x77,0x00,0xff), rgb(0x7e,0x00,0xff),
	rgb(0x84,0x00,0xff), rgb(0x89,0x00,0xff), rgb(0x8f,0x00,0xff), rgb(0x96,0x00,0xff), rgb(0x9c,0x00,0xff), rgb(0xa1,0x00,0xff), rgb(0xa7,0x00,0xff), rgb(0xae,0x00,0xff),
	rgb(0xb4,0x00,0xff), rgb(0xb9,0x00,0xff), rgb(0xbf,0x00,0xff), rgb(0xc6,0x00,0xff), rgb(0xcc,0x00,0xff), rgb(0xd1,0x00,0xff), rgb(0xd7,0x00,0xff), rgb(0xde,0x00,0xff),
	rgb(0xe4,0x00,0xff), rgb(0xe9,0x00,0xff), rgb(0xef,0x00,0xff), rgb(0xf6,0x00,0xff), rgb(0xfc,0x00,0xff), rgb(0xff,0x00,0xfc), rgb(0xff,0x00,0xf6), rgb(0xff,0x00,0xef),
	rgb(0xff,0x00,0xe9), rgb(0xff,0x00,0xe4), rgb(0xff,0x00,0xde), rgb(0xff,0x00,0xd7), rgb(0xff,0x00,0xd1), rgb(0xff,0x00,0xcc), rgb(0xff,0x00,0xc6), rgb(0xff,0x00,0xbf),
	rgb(0xff,0x00,0xb9), rgb(0xff,0x00,0xb4), rgb(0xff,0x00,0xae), rgb(0xff,0x00,0xa7), rgb(0xff,0x00,0xa1), rgb(0xff,0x00,0x9c), rgb(0xff,0x00,0x96), rgb(0xff,0x00,0x8f),
	rgb(0xff,0x00,0x89), rgb(0xff,0x00,0x84), rgb(0xff,0x00,0x7e), rgb(0xff,0x00,0x77), rgb(0xff,0x00,0x72), rgb(0xff,0x00,0x6b), rgb(0xff,0x00,0x66), rgb(0xff,0x00,0x5f),
	rgb(0xff,0x00,0x5a), rgb(0xff,0x00,0x53), rgb(0xff,0x00,0x4e), rgb(0xff,0x00,0x47), rgb(0xff,0x00,0x42), rgb(0xff,0x00,0x3b), rgb(0xff,0x00,0x35), rgb(0xff,0x00,0x2f),
	rgb(0xff,0x00,0x29), rgb(0xff,0x00,0x23), rgb(0xff,0x00,0x1d), rgb(0xff,0x00,0x17), rgb(0xff,0x00,0x11), rgb(0xff,0x00,0x0b), rgb(0xff,0x00,0x05), rgb(0xff,0x00,0x00)  };
 return _; }
}}
